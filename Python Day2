import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('Data.csv', encoding='latin-1')
df['Order_Date'] = pd.to_datetime(df['Order_Date'])

sales_over_time = df.groupby('Order_Date')['Sales'].sum()

plt.figure(figsize=(10,6))
plt.plot(sales_over_time, marker='o', linestyle='-')
plt.title('Sales Over Time')
plt.xlabel('Date')
plt.ylabel('Total Sales')
plt.grid(True)
plt.show()


import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('Data.csv', encoding='latin-1')

region_ship_mode_counts = df.groupby(['Region', 'Ship_Mode']).size().unstack(fill_value=0)

plt.figure(figsize=(10, 6))
region_ship_mode_counts.plot(kind='bar', stacked=False)
plt.title('Orders by Region and Ship Mode')
plt.xlabel('Region')
plt.ylabel('Number of Orders')
plt.xticks(rotation=45)
plt.legend(title='Ship Mode')
plt.show()


import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv('Data.csv', encoding='latin-1')

top_cities = df.groupby('City')['Sales'].sum().sort_values(ascending=False).head(10).index
df_filtered = df[df['City'].isin(top_cities)]

plt.figure(figsize=(9, 6))
sns.scatterplot(data=df_filtered, x='Category', y='Sales', hue='City', palette='Set2', s=100)
plt.title('Sales by Category and City')
plt.xlabel('Category')
plt.ylabel('Sales')
plt.xticks(rotation=45)
plt.legend(title='City')
plt.grid(True)
plt.tight_layout()
plt.show()


import pandas as pd
import pandas as pd

df = pd.read_csv('Data.csv', encoding='latin-1')

subcategory_sales = df.groupby('Sub_Category')['Sales'].sum()

plt.figure(figsize=(10, 6))
plt.pie(subcategory_sales, startangle=140)
plt.title('Sales Distribution by Subcategory')
plt.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle

plt.legend(loc='upper left', labels=['%s, %1.1f%%' % (label, subcategory_sales[i] / subcategory_sales.sum() * 100) for i, label in enumerate(subcategory_sales.index)])

plt.show()


import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('Data.csv', encoding='latin-1')
category_subcategory_sales = df.groupby(['Category', 'Sub_Category'])['Sales'].sum().unstack(fill_value=0)

plt.figure(figsize=(15, 20))

category_subcategory_sales.plot(kind='bar', stacked=True, ax=plt.gca())
plt.title('Sales Distribution by Category and Subcategory')
plt.xlabel('Category')
plt.ylabel('Sales')
plt.xticks(rotation=45)
plt.legend(title='Subcategory')

plt.tight_layout()
plt.show()


import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv('Data.csv', encoding='latin-1')
df['Order_Date'] = pd.to_datetime(df['Order_Date'])

plt.figure(figsize=(12, 8))
sns.scatterplot(data=df, x='Order_Date', y='Sales', hue='Category', palette='Set2', s=100)
plt.title('Sales by Order Date and Category')
plt.xlabel('Order Date')
plt.ylabel('Sales')
plt.xticks(rotation=45)
plt.legend(title='Category')
plt.grid(True)
plt.tight_layout()
plt.show()


import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('Data.csv', encoding='latin-1')

top_product_sales = df.groupby('Product_ID')['Sales'].sum().sort_values(ascending=False).head(10)

plt.figure(figsize=(12, 8))
top_product_sales.plot(kind='bar', color='skyblue')
plt.title('Total Sales for Top 10 Products')
plt.xlabel('Product ID')
plt.ylabel('Total Sales')
plt.xticks(rotation=45)
plt.grid(axis='y')
plt.tight_layout()
plt.show()


import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('Data.csv', encoding='latin-1')

df['Order_Date'] = pd.to_datetime(df['Order_Date'])

df['Year'] = df['Order_Date'].dt.year

yearly_product_sales = df.groupby(['Year', 'Product_ID'])['Sales'].sum()

top_product_by_year = yearly_product_sales.groupby('Year').idxmax().apply(lambda x: x[1])

num_years = len(top_product_by_year)
fig, axes = plt.subplots(nrows=1, ncols=num_years, figsize=(16, 6), sharey=True)

for i, (year, product_id) in enumerate(top_product_by_year.items()):
    sales = yearly_product_sales.loc[year]
    axes[i].bar(product_id, sales[product_id], color='skyblue')
    axes[i].set_title(f'Top Product for {year}')
    axes[i].set_xlabel('Product ID')
    axes[i].set_ylabel('Total Sales')
    axes[i].grid(axis='y')

plt.tight_layout()
plt.show()


import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('Data.csv', encoding='latin-1')

sales_by_customer = df.groupby('Customer_ID')['Sales'].sum().reset_index()

top_10_customers = sales_by_customer.sort_values(by='Sales', ascending=False).head(10)

plt.figure(figsize=(10, 6))
plt.bar(top_10_customers['Customer_ID'], top_10_customers['Sales'], color='skyblue')
plt.title('Top 10 Customers by Sales')
plt.xlabel('Customer ID')
plt.ylabel('Total Sales')
plt.xticks(rotation=45)
plt.show()


import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('Data.csv', encoding='latin-1')

df['Order_Date'] = pd.to_datetime(df['Order_Date'])

df['Year'] = df['Order_Date'].dt.year

sales_by_year_customer = df.groupby(['Year', 'Customer_ID'])['Sales'].sum().reset_index()

top_customer_by_year = sales_by_year_customer.loc[sales_by_year_customer.groupby('Year')['Sales'].idxmax()]

plt.figure(figsize=(10, 6))
for year, data in top_customer_by_year.groupby('Year'):
    plt.bar(year, data['Sales'], label=str(year) + ' - Customer ID: ' + str(data['Customer_ID'].values[0]))

plt.title('Top Customer Sales for Each Year')
plt.xlabel('Year')
plt.ylabel('Sales')
plt.legend()
plt.xticks(top_customer_by_year['Year'])
plt.tight_layout()
plt.show()


import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('Data.csv', encoding='latin-1')

df['Order_Date'] = pd.to_datetime(df['Order_Date'])

df['Year'] = df['Order_Date'].dt.year

average_sales_by_year = df.groupby('Year')['Sales'].mean()

plt.figure(figsize=(10, 6))
average_sales_by_year.plot(kind='bar', color='skyblue')
plt.title('Average Sales for Each Year')
plt.xlabel('Year')
plt.ylabel('Average Sales')
plt.xticks(rotation=45)
plt.grid(axis='y', linestyle='--', alpha=0.7)
plt.tight_layout()
plt.show()


import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('Data.csv', encoding='latin-1')

df['Order_Date'] = pd.to_datetime(df['Order_Date'])

df['Year'] = df['Order_Date'].dt.year

highest_sales_each_year = df.loc[df.groupby('Year')['Sales'].idxmax()]

highest_sales_info = highest_sales_each_year[['Year', 'Product_ID', 'Product_Name', 'Customer_ID', 'Sales']]

print(highest_sales_info)
plt.figure(figsize=(10, 6))
for year, data in highest_sales_info.groupby('Year'):
    plt.bar(year, data['Sales'], label=f'{year} - Product: {data["Product_Name"].values[0]} ({data["Product_ID"].values[0]}), Customer ID: {data["Customer_ID"].values[0]}')

plt.title('Highest Sales with Product and Customer Information for Each Year')
plt.xlabel('Year')
plt.ylabel('Sales')
plt.legend()
plt.tight_layout()
plt.show()
